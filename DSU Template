class DSU{
    public :
    vector<int> parent;
    vector<int> size;

    DSU(int n){
        parent=vector<int>(n);
        size=vector<int>(n,1);
        for(int i=0;i<n;i++)
            parent[i]=i;
    }

    int findParent(int x){
        while(x!=parent[x]){
            parent[x]=parent[parent[x]];
            x=parent[x];
        }
        return x;
    }

    void combine(int x, int y){
        int px=findParent(x);
        int py=findParent(y);

        if(px==py)
            return;
        
        if(size[px]>size[py]){
            parent[py]=px;
            size[px]+=size[py];
        }
        else{
            parent[px]=py;
            size[py]+=size[px];
        }
    }
};
