#include <bits/stdc++.h>
using namespace std;

int query(int l, int r, int blk, vector<int> &arr, vector<int> &sqrtDcArr){
    int LB=l/blk;
    int RB=r/blk;
    int mn=INT_MAX;
    
    if(LB==RB){
        for(int i=l;i<=r;i++)
            mn=min(mn,arr[i]);
        return mn;
    }
    
    // left block
    for(int i=l;i<(LB+1)*blk;i++){
        mn=min(mn,arr[i]);
    }
    
    // middle blocks
    for(int i=LB+1;i<RB;i++)
        mn=min(mn,sqrtDcArr[i]);
        
    // right block
    for(int i=RB*blk;i<=r;i++){
        mn=min(mn,arr[i]);
    }
    
    return mn;
}

int main() {
    int n,l,r;  cin >> n;
    vector<int> arr(n),sqrtDcArr;
    for(int i=0;i<n;i++)    cin >> arr[i];
    
    int blk=sqrt(n),count=0,mn=INT_MAX;
    
    // creating sqrt decomposition array
    for(int i=0;i<n;i++){
        if(count<blk){
            mn=min(mn,arr[i]);
            count++;
        }
        else{
            sqrtDcArr.push_back(mn);
            count=0;
            mn=INT_MAX;
            i--;
        }
    }
    if(mn!=INT_MAX)
        sqrtDcArr.push_back(mn);
    
    int q;  cin >> q;
    while(q--){
        cin >> l >> r;
        cout << query(l,r,blk,arr,sqrtDcArr) << endl;
    }
}
